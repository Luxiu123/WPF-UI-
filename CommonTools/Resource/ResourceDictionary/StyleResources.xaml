<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ui="http://schemas.modernwpf.com/2019"
  xmlns:utils="clr-namespace:CommonTools.Utils"
  xmlns:widget="clr-namespace:CommonTools.Widget">
  <!--  CheckBoxStyle  -->
  <Style
    x:Key="GlobalCheckBoxStyle"
    BasedOn="{StaticResource DefaultCheckBoxStyle}"
    TargetType="CheckBox">
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource GlobalCheckBoxStyle}" TargetType="CheckBox" />
  <!--  TextBlockStyle  -->
  <Style x:Key="GlobalTextBlockStyle" TargetType="TextBlock">
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="ToolTipService.InitialShowDelay" Value="100" />
  </Style>
  <Style BasedOn="{StaticResource GlobalTextBlockStyle}" TargetType="TextBlock" />
  <!--  TextBoxStyle  -->
  <Style
    x:Key="GlobalTextBoxStyle"
    BasedOn="{StaticResource DefaultTextBoxStyle}"
    TargetType="TextBox">
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource GlobalTextBoxStyle}" TargetType="TextBox" />
  <!--  PasswordBoxStyle  -->
  <Style
    x:Key="GlobalPasswordBoxStyle"
    BasedOn="{StaticResource DefaultPasswordBoxStyle}"
    TargetType="PasswordBox">
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource GlobalPasswordBoxStyle}" TargetType="PasswordBox" />
  <!--  MenuButton 样式  -->
  <Style
    x:Key="MenuButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="Padding" Value="4" />
  </Style>
  <!--  IconFont 样式  -->
  <Style x:Key="IconFontStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource IconFontUrI}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
  </Style>
  <!--  嵌入 Button Icon  -->
  <Style
    x:Key="ButtonIconFontStyle"
    BasedOn="{StaticResource IconFontStyle}"
    TargetType="TextBlock">
    <Setter Property="Margin" Value="0,0,12,0" />
    <Setter Property="Foreground" Value="{DynamicResource ApplicationForeground}" />
  </Style>
  <!--  菜单 TextBlock  -->
  <Style x:Key="MenuTextBlockStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource Black8}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
  </Style>
  <!--  嵌入 Button TextBlock  -->
  <Style
    x:Key="ButtonTextBlockStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock">
    <Setter Property="Foreground" Value="{DynamicResource ApplicationForeground}" />
  </Style>
  <!--  菜单 SimpleStackPanel  -->
  <Style x:Key="ContextMenuSimpleStackPanelStyle" TargetType="ui:SimpleStackPanel">
    <Setter Property="VerticalAlignment" Value="Center" />
    <!--  不可缺少  -->
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Spacing" Value="{StaticResource ContextMenuSimpleStackPanelSpacing}" />
    <Setter Property="Orientation" Value="Horizontal" />
  </Style>
  <!--  GlobalContextMenuStyle  -->
  <Style
    x:Key="GlobalContextMenuStyle"
    BasedOn="{StaticResource DefaultContextMenuStyle}"
    TargetType="ContextMenu">
    <Setter Property="utils:ScaleAnimationHelper.IsEnabled" Value="True" />
    <Setter Property="Background" Value="White" />
    <!--<Setter Property="Width" Value="{DynamicResource ContextMenuWidth}" />-->
  </Style>
  <!--  超链接 HyperLinkStyle  -->
  <Style
    x:Key="HyperLinkStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="False">
        <Setter Property="TextDecorations" Value="None" />
        <Setter Property="Cursor" Value="None" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--  ContentDialogTitleStyle  -->
  <Style x:Key="ContentDialogTitleStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="黑体" />
    <Setter Property="FontSize" Value="20" />
  </Style>
  <!--  BaseDialogIconStyle  -->
  <Style x:Key="BaseDialogIconStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource IconFontUrI}" />
    <Setter Property="FontSize" Value="22" />
  </Style>
  <!--  InfoIconStyle  -->
  <Style
    x:Key="InfoIconStyle"
    BasedOn="{StaticResource BaseDialogIconStyle}"
    TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource Black7}" />
    <Setter Property="Text" Value="&#xe650;" />
  </Style>
  <!--  WaringIconStyle  -->
  <Style
    x:Key="WaringIconStyle"
    BasedOn="{StaticResource BaseDialogIconStyle}"
    TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource WarningIconForeground}" />
    <Setter Property="Text" Value="&#xe6d2;" />
  </Style>
  <!--  TransparentMenuItemStyle  -->
  <Style x:Key="TransparentMenuItemStyle" TargetType="MenuItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuItem">
          <Border x:Name="bd">
            <ContentPresenter Content="{TemplateBinding Header}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter TargetName="bd" Property="Background" Value="Transparent" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  TitleBarButtonstyle  -->
  <Style x:Key="TitleBarButtonstyle" TargetType="Button">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="ContentBackgrond">
            <ContentPresenter x:Name="Content" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ContentBackgrond" Property="Background" Value="{DynamicResource TitleBarHoverBackground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource TitleBarTextForeground}" />
              <Setter TargetName="ContentBackgrond" Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="ContentBackgrond" Property="Background" Value="{DynamicResource TitleBarHoverBackgroundDraker}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  ButtonStyle  -->
  <Style
    x:Key="GlobalButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="Padding" Value="16,8,16,8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border
            x:Name="Background"
            Background="{TemplateBinding Background}"
            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
            SnapsToDevicePixels="True">
            <Border
              x:Name="Border"
              Padding="{TemplateBinding Padding}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
              <ContentPresenter
                x:Name="ContentPresenter"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ApplicationBackgroundDark1}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ApplicationBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ApplicationBackground}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ApplicationBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ApplicationBackgroundDark2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ApplicationBackgroundDark2}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GlobalButtonStyle}" TargetType="Button" />
  <Style
    x:Key="GlobalIconButtonStyle"
    BasedOn="{StaticResource GlobalButtonStyle}"
    TargetType="widget:IconButton" />
  <Style BasedOn="{StaticResource GlobalButtonStyle}" TargetType="widget:IconButton" />
  <!--  ErrorButtonStyle  -->
  <Style
    x:Key="GlobalErrorButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="Padding" Value="16,8,16,8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border
            x:Name="Background"
            Background="{TemplateBinding Background}"
            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
            SnapsToDevicePixels="True">
            <Border
              x:Name="Border"
              Padding="{TemplateBinding Padding}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
              <ContentPresenter
                x:Name="ContentPresenter"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ErrorBackgroundDark1}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ErrorBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ErrorBackground}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ErrorBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ErrorBackgroundDark2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ErrorBackgroundDark2}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  SuccessButtonStyle  -->
  <Style
    x:Key="GlobalSuccessButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="Padding" Value="16,8,16,8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border
            x:Name="Background"
            Background="{TemplateBinding Background}"
            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
            SnapsToDevicePixels="True">
            <Border
              x:Name="Border"
              Padding="{TemplateBinding Padding}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
              <ContentPresenter
                x:Name="ContentPresenter"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource SuccessBackgroundDark1}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SuccessBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource SuccessBackground}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SuccessBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource SuccessBackgroundDark2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SuccessBackgroundDark2}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  WaringButtonStyle  -->
  <Style
    x:Key="GlobalWaringButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="Padding" Value="16,8,16,8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border
            x:Name="Background"
            Background="{TemplateBinding Background}"
            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
            SnapsToDevicePixels="True">
            <Border
              x:Name="Border"
              Padding="{TemplateBinding Padding}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
              <ContentPresenter
                x:Name="ContentPresenter"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource WaringBackgroundDark1}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WaringBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource WaringBackground}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WaringBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource WaringBackgroundDark2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WaringBackgroundDark2}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  多行文本框  -->
  <Style
    x:Key="MultilineTextBoxStyle"
    BasedOn="{StaticResource GlobalTextBoxStyle}"
    TargetType="TextBox">
    <Setter Property="AcceptsReturn" Value="True" />
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
  </Style>
  <!--  无边框 TextBox  -->
  <Style
    x:Key="BorderlessTextBoxStyle"
    BasedOn="{StaticResource GlobalTextBoxStyle}"
    TargetType="TextBox">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <ScrollViewer
            x:Name="PART_ContentHost"
            Margin="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}"
            VerticalAlignment="{TemplateBinding VerticalAlignment}"
            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
            Background="{TemplateBinding Background}"
            Focusable="False"
            FontSize="{TemplateBinding FontSize}"
            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
            IsTabStop="False"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            Style="{DynamicResource TextControlContentHostStyle}"
            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  ItemsControl Virtualization  -->
  <Style x:Key="VirtualizationItemsControlStyle" TargetType="ItemsControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ItemsControl">
          <ScrollViewer CanContentScroll="True">
            <ItemsPresenter />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  GlobalListBoxStyle  -->
  <Style
    x:Key="GlobalListBoxStyle"
    BasedOn="{StaticResource DefaultListBoxStyle}"
    TargetType="ListBox">
    <Setter Property="Background" Value="Transparent" />
  </Style>
  <Style BasedOn="{StaticResource GlobalListBoxStyle}" TargetType="ListBox" />
  <!--  NavigationContentHeaderStyle  -->
  <Style
    x:Key="NavigationContentHeaderStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock">
    <Setter Property="FontSize" Value="{StaticResource NavigationContentHeaderFontSize}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>
  <!--  BorderHoverEffectStyle  -->
  <Style x:Key="BorderHoverEffectStyle" TargetType="Border">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Gray3}" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="False">
        <Setter Property="Background" Value="Transparent" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>