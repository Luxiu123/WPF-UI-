<ResourceDictionary
  x:Class="CommonUITools.Resource.ResourceDictionary.StyleResources"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ui="http://schemas.modernwpf.com/2019"
  xmlns:utils="clr-namespace:CommonUITools.Utils"
  xmlns:widget="clr-namespace:CommonUITools.Widget">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/CommonUITools;component/Resource/ResourceDictionary/ColorResources.xaml" />
    <ResourceDictionary Source="/CommonUITools;component/Resource/ResourceDictionary/CommonResources.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--#region ScrollBarStyle-->
  <Style x:Key="ScrollBarRepeatButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="0"
            CornerRadius="0">
            <Border.Style>
              <Style TargetType="Border">
                <Style.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ThumbHoverBrushBackground}" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="{DynamicResource ThumbNormalBackground}" />
                  </Trigger>
                </Style.Triggers>
              </Style>
            </Border.Style>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="VerticalScrollBarControlTemplate" TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Track Name="PART_Track" IsDirectionReversed="true">
        <Track.DecreaseRepeatButton>
          <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarRepeatButton}" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Margin="0" Style="{StaticResource ScrollBarThumbStyle}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarRepeatButton}" />
        </Track.IncreaseRepeatButton>
      </Track>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="HorizontalScrollBarControlTemplate" TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Track
        Name="PART_Track"
        Grid.Column="1"
        IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarRepeatButton}" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Margin="0" Style="{StaticResource ScrollBarThumbStyle}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarRepeatButton}" />
        </Track.IncreaseRepeatButton>
      </Track>
    </Grid>
  </ControlTemplate>
  <Style x:Key="TextElementScrollBarStyle" TargetType="{x:Type ScrollBar}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Template" Value="{StaticResource HorizontalScrollBarControlTemplate}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Width" Value="12" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template" Value="{StaticResource VerticalScrollBarControlTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TextElementScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter Grid.RowSpan="2" Grid.ColumnSpan="2" />
            <ScrollBar
              Name="PART_VerticalScrollBar"
              Grid.Column="1"
              Maximum="{TemplateBinding ScrollableHeight}"
              Style="{StaticResource TextElementScrollBarStyle}"
              ViewportSize="{TemplateBinding ViewportHeight}"
              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
              Value="{TemplateBinding VerticalOffset}" />
            <ScrollBar
              Name="PART_HorizontalScrollBar"
              Grid.Row="1"
              Maximum="{TemplateBinding ScrollableWidth}"
              Orientation="Horizontal"
              Style="{StaticResource TextElementScrollBarStyle}"
              ViewportSize="{TemplateBinding ViewportWidth}"
              Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
              Value="{TemplateBinding HorizontalOffset}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--#endregion-->
  <!--  CheckBoxStyle  -->
  <Style
    x:Key="GlobalCheckBoxStyle"
    BasedOn="{StaticResource DefaultCheckBoxStyle}"
    TargetType="CheckBox">
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource GlobalCheckBoxStyle}" TargetType="CheckBox" />
  <!--  TextBlockStyle  -->
  <Style x:Key="GlobalTextBlockStyle" TargetType="TextBlock">
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipServiceInitialShowDelay}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalTextBlockStyle}" TargetType="TextBlock" />
  <!--  TextBoxStyle  -->
  <Style
    x:Key="GlobalTextBoxStyle"
    BasedOn="{StaticResource DefaultTextBoxStyle}"
    TargetType="TextBox">
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Resources>
      <Style BasedOn="{StaticResource TextElementScrollBarStyle}" TargetType="ScrollBar" />
    </Style.Resources>
  </Style>
  <Style BasedOn="{StaticResource GlobalTextBoxStyle}" TargetType="TextBox" />
  <!--  PasswordBoxStyle  -->
  <Style
    x:Key="GlobalPasswordBoxStyle"
    BasedOn="{StaticResource DefaultPasswordBoxStyle}"
    TargetType="PasswordBox">
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource GlobalPasswordBoxStyle}" TargetType="PasswordBox" />
  <!--  MenuButton 样式  -->
  <Style
    x:Key="MenuButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="Padding" Value="4" />
  </Style>
  <!--  IconFont 样式  -->
  <Style
    x:Key="IconFontStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource IconFontUrI}" />
  </Style>
  <!--  CommonUIToolsIconFontStyle 样式  -->
  <Style
    x:Key="CommonUIToolsIconFontStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource CommonUIToolsIconFontUrI}" />
  </Style>
  <!--  嵌入 Button Icon  -->
  <Style
    x:Key="ButtonIconFontStyle"
    BasedOn="{StaticResource IconFontStyle}"
    TargetType="TextBlock">
    <Setter Property="Margin" Value="0,0,12,0" />
  </Style>
  <!--  菜单 TextBlock  -->
  <Style x:Key="MenuTextBlockStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource Black8}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
  </Style>
  <!--  嵌入 Button TextBlock  -->
  <Style
    x:Key="ButtonTextBlockStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock" />
  <!--  菜单 SimpleStackPanel  -->
  <Style x:Key="ContextMenuSimpleStackPanelStyle" TargetType="ui:SimpleStackPanel">
    <Setter Property="VerticalAlignment" Value="Center" />
    <!--  不可缺少  -->
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Spacing" Value="{StaticResource ContextMenuSimpleStackPanelSpacing}" />
    <Setter Property="Orientation" Value="Horizontal" />
  </Style>
  <!--  GlobalSimpleStackPanelStyle  -->
  <Style x:Key="GlobalSimpleStackPanelStyle" TargetType="ui:SimpleStackPanel">
    <Setter Property="Spacing" Value="{StaticResource NarrowItemSpacing}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalSimpleStackPanelStyle}" TargetType="ui:SimpleStackPanel" />
  <!--  GlobalContextMenuStyle  -->
  <Style
    x:Key="GlobalContextMenuStyle"
    BasedOn="{StaticResource DefaultContextMenuStyle}"
    TargetType="ContextMenu">
    <Setter Property="utils:ScaleAnimationHelper.IsEnabled" Value="True" />
    <Setter Property="Width" Value="{DynamicResource ContextMenuWidth}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalContextMenuStyle}" TargetType="ContextMenu" />
  <Style BasedOn="{StaticResource TextControlContextMenu}" TargetType="ui:TextContextMenu">
    <Setter Property="utils:ScaleAnimationHelper.IsEnabled" Value="True" />
    <Setter Property="Width" Value="{DynamicResource ContextMenuWidth}" />
  </Style>
  <!--  GlobalMenuItemStyle  -->
  <Style
    x:Key="GlobalMenuItemStyle"
    BasedOn="{StaticResource DefaultMenuItemStyle}"
    TargetType="MenuItem">
    <Setter Property="Padding" Value="16,8" />
  </Style>
  <Style BasedOn="{StaticResource GlobalMenuItemStyle}" TargetType="MenuItem" />
  <!--  超链接 HyperLinkStyle  -->
  <Style
    x:Key="HyperLinkStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--  ContentDialogTitleStyle  -->
  <Style x:Key="ContentDialogTitleStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="黑体" />
    <Setter Property="FontSize" Value="20" />
  </Style>
  <!--  BaseDialogIconStyle  -->
  <Style x:Key="BaseDialogIconStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource CommonUIToolsIconFontUrI}" />
    <Setter Property="FontSize" Value="22" />
  </Style>
  <!--  InfoIconStyle  -->
  <Style
    x:Key="InfoIconStyle"
    BasedOn="{StaticResource BaseDialogIconStyle}"
    TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource Black7}" />
    <Setter Property="Text" Value="&#xe650;" />
  </Style>
  <!--  WaringIconStyle  -->
  <Style
    x:Key="WaringIconStyle"
    BasedOn="{StaticResource BaseDialogIconStyle}"
    TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource WarningIconForeground}" />
    <Setter Property="Text" Value="&#xe6d2;" />
  </Style>
  <!--  TransparentMenuItemStyle  -->
  <Style x:Key="TransparentMenuItemStyle" TargetType="MenuItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuItem">
          <Border x:Name="bd">
            <ContentPresenter Content="{TemplateBinding Header}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter TargetName="bd" Property="Background" Value="Transparent" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  ButtonStyle  -->
  <Style
    x:Key="GlobalButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipServiceInitialShowDelay}" />
    <Setter Property="Padding" Value="16,8,16,8" />
  </Style>
  <Style BasedOn="{StaticResource GlobalButtonStyle}" TargetType="Button" />
  <!--  TitleBarButtonstyle  -->
  <Style x:Key="TitleBarButtonstyle" TargetType="ui:TitleBarButton">
    <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipServiceInitialShowDelay}" />
  </Style>
  <!--  GlobalWorkingButtonStyle  -->
  <Style BasedOn="{StaticResource GlobalButtonStyle}" TargetType="widget:WorkingButton" />
  <!--  GlobalSingleIconButtonStyle  -->
  <Style
    x:Key="GlobalSingleIconButtonStyle"
    BasedOn="{StaticResource GlobalButtonStyle}"
    TargetType="Button">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="8" />
    <Style.Resources>
      <SolidColorBrush x:Key="ButtonBackground" Color="Transparent" />
      <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{Binding Source={StaticResource Gray3}, Path=Color}" />
      <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{Binding Source={StaticResource Gray4}, Path=Color}" />
    </Style.Resources>
  </Style>
  <!--  GlobalIconButtonStyle  -->
  <Style
    x:Key="GlobalIconButtonStyle"
    BasedOn="{StaticResource GlobalButtonStyle}"
    TargetType="widget:IconButton" />
  <Style BasedOn="{StaticResource GlobalIconButtonStyle}" TargetType="widget:IconButton" />
  <!--  ErrorButtonStyle  -->
  <Style
    x:Key="GlobalErrorButtonStyle"
    BasedOn="{StaticResource GlobalButtonStyle}"
    TargetType="Button">
    <Style.Resources>
      <SolidColorBrush x:Key="ButtonBackground" Color="{StaticResource ErrorBackgroundColor}" />
      <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{StaticResource ErrorBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource ErrorBackgroundDark2Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource ErrorBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="{StaticResource ErrorBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="{StaticResource ErrorBackgroundDark2Color}" />
    </Style.Resources>
    <Setter Property="Foreground" Value="{DynamicResource ErrorForeground}" />
  </Style>
  <!--  SuccessButtonStyle  -->
  <Style
    x:Key="GlobalSuccessButtonStyle"
    BasedOn="{StaticResource GlobalButtonStyle}"
    TargetType="Button">
    <Style.Resources>
      <SolidColorBrush x:Key="ButtonBackground" Color="{StaticResource SuccessBackgroundColor}" />
      <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{StaticResource SuccessBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SuccessBackgroundDark2Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource SuccessBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="{StaticResource SuccessBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="{StaticResource SuccessBackgroundDark2Color}" />
    </Style.Resources>
  </Style>
  <!--  WaringButtonStyle  -->
  <Style
    x:Key="GlobalWaringButtonStyle"
    BasedOn="{StaticResource GlobalButtonStyle}"
    TargetType="Button">
    <Style.Resources>
      <SolidColorBrush x:Key="ButtonBackground" Color="{StaticResource WarningBackgroundColor}" />
      <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{StaticResource WarningBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource WarningBackgroundDark2Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource WarningBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="{StaticResource WarningBackgroundDark1Color}" />
      <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="{StaticResource WarningBackgroundDark2Color}" />
    </Style.Resources>
  </Style>
  <!--  多行文本框  -->
  <Style
    x:Key="MultilineTextBoxStyle"
    BasedOn="{StaticResource GlobalTextBoxStyle}"
    TargetType="TextBox">
    <Setter Property="AcceptsReturn" Value="True" />
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
  </Style>
  <!--  多行 TextBlock，可以指定 tag 为完整路径  -->
  <Style
    x:Key="MultilineTextBlockStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock">
    <Setter Property="TextWrapping" Value="Wrap" />
  </Style>
  <!--  打开文件 TextBlock  -->
  <Style
    x:Key="OpenFileTextBlockStyle"
    BasedOn="{StaticResource HyperLinkStyle}"
    TargetType="TextBlock">
    <EventSetter Event="MouseUp" Handler="OpenFileTextBlockMouseUpHandler" />
    <Setter Property="ToolTip" Value="在文件资源管理器中打开" />
  </Style>
  <!--  无边框 TextBox  -->
  <Style
    x:Key="BorderlessTextBoxStyle"
    BasedOn="{StaticResource GlobalTextBoxStyle}"
    TargetType="TextBox">
    <Style.Resources>
      <Thickness
        x:Key="TextControlBorderThemeThickness"
        Bottom="0"
        Left="0"
        Right="0"
        Top="0" />
      <Thickness
        x:Key="TextControlBorderThemeThicknessFocused"
        Bottom="0"
        Left="0"
        Right="0"
        Top="0" />
      <SolidColorBrush x:Key="TextControlButtonBorderBrushPressed" Color="Transparent" />
    </Style.Resources>
    <Setter Property="BorderThickness" Value="0" />
  </Style>
  <!--  ItemsControl Virtualization  -->
  <Style x:Key="VirtualizationItemsControlStyle" TargetType="ItemsControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ItemsControl">
          <ScrollViewer CanContentScroll="True">
            <ItemsPresenter />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  GlobalListBoxStyle  -->
  <Style
    x:Key="GlobalListBoxStyle"
    BasedOn="{StaticResource DefaultListBoxStyle}"
    TargetType="ListBox">
    <Setter Property="Background" Value="Transparent" />
  </Style>
  <Style BasedOn="{StaticResource GlobalListBoxStyle}" TargetType="ListBox" />
  <!--  NavigationContentHeaderStyle  -->
  <Style
    x:Key="NavigationContentHeaderStyle"
    BasedOn="{StaticResource GlobalTextBlockStyle}"
    TargetType="TextBlock">
    <Setter Property="FontSize" Value="{StaticResource NavigationContentHeaderFontSize}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>
  <!--  GlobalBorderStyle  -->
  <Style x:Key="GlobalBorderStyle" TargetType="Border">
    <Setter Property="CornerRadius" Value="4" />
    <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipServiceInitialShowDelay}" />
  </Style>
  <!--  GridViewColumnHeader  -->
  <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="GridViewColumnHeader">
    <Setter Property="utils:GridViewColumnHelper.HeaderMinWidth" Value="50" />
  </Style>
  <!--  FontIcon  -->
  <Style x:Key="GlobalFontIconStyle" TargetType="ui:FontIcon">
    <Setter Property="FontFamily" Value="{StaticResource IconFontUrI}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalFontIconStyle}" TargetType="ui:FontIcon" />
  <!--  NavigationViewItem  -->
  <Style x:Key="GlobalNavigationViewItemStyle" TargetType="ui:NavigationViewItem">
    <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipServiceInitialShowDelay}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalNavigationViewItemStyle}" TargetType="ui:NavigationViewItem" />
  <!--  TextElementContextMenu  -->
  <ContextMenu x:Key="TextElementContextMenu">
    <MenuItem Command="ApplicationCommands.Cut" Header="Cut">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Cut" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.Copy" Header="Copy">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Copy" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.Paste" Header="Paste">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Paste" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.Undo" Header="Undo">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Undo" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.Redo" Header="Redo">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Redo" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.SelectAll" Header="SelectAll" />
  </ContextMenu>
</ResourceDictionary>