<ResourceDictionary
  x:Class="CommonUITools.Resource.ResourceDictionary.StyleResources"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ui="http://schemas.modernwpf.com/2019"
  xmlns:utils="clr-namespace:CommonUITools.Utils">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/CommonUITools;component/Resource/ResourceDictionary/CommonResources.xaml" />
    <ResourceDictionary Source="/CommonUITools;component/Resource/ResourceDictionary/ControlStyle/ButtonResources.xaml" />
    <ResourceDictionary Source="/CommonUITools;component/Resource/ResourceDictionary/ControlStyle/TextBlockResources.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!--  ToggleSwitchNoContentStyle  -->
  <Style x:Key="ToggleSwitchNoContentStyle" TargetType="ui:ToggleSwitch">
    <Setter Property="OnContent" Value="" />
    <Setter Property="OffContent" Value="" />
  </Style>
  <!--  CheckBoxStyle  -->
  <Style
    x:Key="GlobalCheckBoxStyle"
    BasedOn="{StaticResource DefaultCheckBoxStyle}"
    TargetType="CheckBox">
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource GlobalCheckBoxStyle}" TargetType="CheckBox" />
  <!--  菜单 SimpleStackPanel  -->
  <Style x:Key="ContextMenuSimpleStackPanelStyle" TargetType="ui:SimpleStackPanel">
    <Setter Property="VerticalAlignment" Value="Center" />
    <!--  不可缺少  -->
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Spacing" Value="{StaticResource ContextMenuSimpleStackPanelSpacing}" />
    <Setter Property="Orientation" Value="Horizontal" />
  </Style>
  <!--  GlobalSimpleStackPanelStyle  -->
  <Style x:Key="GlobalSimpleStackPanelStyle" TargetType="ui:SimpleStackPanel">
    <Setter Property="Spacing" Value="{StaticResource NarrowItemSpacing}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalSimpleStackPanelStyle}" TargetType="ui:SimpleStackPanel" />
  <!--  GlobalContextMenuStyle  -->
  <Style
    x:Key="GlobalContextMenuStyle"
    BasedOn="{StaticResource DefaultContextMenuStyle}"
    TargetType="ContextMenu">
    <Setter Property="utils:ScaleAnimationHelper.IsEnabled" Value="True" />
    <Setter Property="Width" Value="{DynamicResource ContextMenuWidth}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalContextMenuStyle}" TargetType="ContextMenu" />
  <Style BasedOn="{StaticResource TextControlContextMenu}" TargetType="ui:TextContextMenu">
    <Setter Property="utils:ScaleAnimationHelper.IsEnabled" Value="True" />
    <Setter Property="Width" Value="{DynamicResource ContextMenuWidth}" />
  </Style>
  <!--  GlobalMenuItemStyle  -->
  <Style
    x:Key="GlobalMenuItemStyle"
    BasedOn="{StaticResource DefaultMenuItemStyle}"
    TargetType="MenuItem">
    <Setter Property="Padding" Value="16,8" />
  </Style>
  <Style BasedOn="{StaticResource GlobalMenuItemStyle}" TargetType="MenuItem" />
  <!--  TransparentMenuItemStyle  -->
  <Style x:Key="TransparentMenuItemStyle" TargetType="MenuItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuItem">
          <Border x:Name="bd">
            <ContentPresenter Content="{TemplateBinding Header}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter TargetName="bd" Property="Background" Value="Transparent" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  ItemsControl Virtualization  -->
  <Style x:Key="VirtualizationItemsControlStyle" TargetType="ItemsControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ItemsControl">
          <ScrollViewer CanContentScroll="True">
            <ItemsPresenter />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--  GlobalListBoxItemStyle  -->
  <Style
    x:Key="GlobalListBoxItemStyle"
    BasedOn="{StaticResource DefaultListBoxItemStyle}"
    TargetType="ListBoxItem">
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>
  <!--  GlobalListBoxStyle  -->
  <Style
    x:Key="GlobalListBoxStyle"
    BasedOn="{StaticResource DefaultListBoxStyle}"
    TargetType="ListBox">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource GlobalListBoxItemStyle}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalListBoxStyle}" TargetType="ListBox" />
  <!--  TransparentListBoxStyle  -->
  <Style x:Key="TransparentListBoxStyle" TargetType="ListBox">
    <Style.Resources>
      <SolidColorBrush x:Key="SystemControlHighlightListAccentHighBrush" Color="Transparent" />
      <SolidColorBrush x:Key="SystemControlHighlightListAccentLowBrush" Color="Transparent" />
      <SolidColorBrush x:Key="SystemControlHighlightListAccentMediumBrush" Color="Transparent" />
      <SolidColorBrush x:Key="SystemControlHighlightListAccentVeryHighBrush" Color="Transparent" />
      <SolidColorBrush x:Key="SystemControlHighlightListAccentMediumLowBrush" Color="Transparent" />
      <SolidColorBrush x:Key="SystemControlHighlightListMediumBrush" Color="Transparent" />
      <SolidColorBrush x:Key="SystemControlHighlightListLowBrush" Color="Transparent" />
    </Style.Resources>
  </Style>
  <!--  GlobalListViewItemStyle  -->
  <Style
    x:Key="GlobalListViewItemStyle"
    BasedOn="{StaticResource DefaultListViewItemStyle}"
    TargetType="ListViewItem">
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>
  <!--  GlobalListViewStyle  -->
  <Style
    x:Key="GlobalListViewStyle"
    BasedOn="{StaticResource DefaultListViewStyle}"
    TargetType="ListView">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource GlobalListViewItemStyle}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalListViewStyle}" TargetType="ListView" />
  <!--  GlobalBorderStyle  -->
  <Style x:Key="GlobalBorderStyle" TargetType="Border">
    <Setter Property="CornerRadius" Value="4" />
    <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipServiceInitialShowDelay}" />
  </Style>
  <!--  GridViewColumnHeader  -->
  <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="GridViewColumnHeader">
    <Setter Property="utils:GridViewColumnHelper.HeaderMinWidth" Value="50" />
  </Style>
  <!--  FontIcon  -->
  <Style x:Key="GlobalFontIconStyle" TargetType="ui:FontIcon">
    <Setter Property="FontFamily" Value="{StaticResource IconFontUrI}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalFontIconStyle}" TargetType="ui:FontIcon" />
  <!--  NavigationViewItem  -->
  <Style x:Key="GlobalNavigationViewItemStyle" TargetType="ui:NavigationViewItem">
    <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipServiceInitialShowDelay}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalNavigationViewItemStyle}" TargetType="ui:NavigationViewItem" />
  <!--  TextElementContextMenu  -->
  <ContextMenu x:Key="TextElementContextMenu">
    <MenuItem Command="ApplicationCommands.Cut" Header="Cut">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Cut" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.Copy" Header="Copy">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Copy" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.Paste" Header="Paste">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Paste" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.Undo" Header="Undo">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Undo" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.Redo" Header="Redo">
      <MenuItem.Icon>
        <ui:SymbolIcon Symbol="Redo" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Command="ApplicationCommands.SelectAll" Header="SelectAll" />
  </ContextMenu>
  <!--  GlobalNumberBoxStyle  -->
  <Style x:Key="GlobalNumberBoxStyle" TargetType="ui:NumberBox">
    <Setter Property="AcceptsExpression" Value="False" />
    <Setter Property="SpinButtonPlacementMode" Value="Compact" />
    <Setter Property="MinWidth" Value="{StaticResource NumberBoxMinWidth}" />
  </Style>
  <Style BasedOn="{StaticResource GlobalNumberBoxStyle}" TargetType="ui:NumberBox" />
  <!--  IntegerNumberBoxStyle  -->
  <Style
    x:Key="IntegerNumberBoxStyle"
    BasedOn="{StaticResource GlobalNumberBoxStyle}"
    TargetType="ui:NumberBox">
    <EventSetter Event="LostFocus" Handler="IntegerNumberBoxLostFocusHandler" />
  </Style>
  <!--  GlobalGridSplitterStyle  -->
  <Style x:Key="GlobalGridSplitterStyle" TargetType="GridSplitter">
    <Setter Property="Background" Value="Transparent" />
  </Style>
  <Style BasedOn="{StaticResource GlobalGridSplitterStyle}" TargetType="GridSplitter" />
</ResourceDictionary>